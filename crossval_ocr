clear all
close all
clc

load('C:\Users\kaihe\Dropbox\homeworks\ml_project\data set\ocr_data');

% groups = ismember(species,'setosa');         %# create a two-class problem

% training partition
p_training=10;
sample_partition=rand(1, size(x_ocr,1));

x_training=x_ocr(find(sample_partition<=p_training/100),:);
y_training=y_ocr(find(sample_partition<=p_training/100));

x_testing=x_ocr(find(sample_partition>p_training/100),:);
y_testing=y_ocr(find(sample_partition>p_training/100));

% % 0 -- linear: u'*v
% % 1 -- polynomial: (gamma*u'*v + coef0)^degree
% % 2 -- radial basis function: exp(-gamma*|u-v|^2)
% % 3 -- sigmoid: tanh(gamma*u'*v + coef0)

disp('p_training 10')
disp('validation 10')
% linear
disp('linear')
model =  svmtrain(y_training,x_training,'-t 0 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 0 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% pilynomial
disp('polynomial =3')
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =4')
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =5')
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =6')
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% radial basis f
disp('rbf gamma = 1')
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% sigmoid
disp('sigmoid gamma = 1')
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

%%
disp(' ')
disp(' ')

disp('p_training 10')
disp('validation 3')
% linear
disp('linear')
model =  svmtrain(y_training,x_training,'-t 0 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 0 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% pilynomial
disp('polynomial =3')
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =4')
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =5')
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =6')
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% radial basis f
disp('rbf gamma = 1')
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% sigmoid
disp('sigmoid gamma = 1')
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

%% 50% training

disp(' ')
disp(' ')
disp(' ')
disp(' ')

% training partition
p_training=50;
sample_partition=rand(1, size(x_ocr,1));

x_training=x_ocr(find(sample_partition<=p_training/100),:);
y_training=y_ocr(find(sample_partition<=p_training/100));

x_testing=x_ocr(find(sample_partition>p_training/100),:);
y_testing=y_ocr(find(sample_partition>p_training/100));

% % 0 -- linear: u'*v
% % 1 -- polynomial: (gamma*u'*v + coef0)^degree
% % 2 -- radial basis function: exp(-gamma*|u-v|^2)
% % 3 -- sigmoid: tanh(gamma*u'*v + coef0)

disp('p_training 50')
disp('validation 10')
% linear
disp('linear')
model =  svmtrain(y_training,x_training,'-t 0 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 0 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% pilynomial
disp('polynomial =3')
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =4')
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =5')
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =6')
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% radial basis f
disp('rbf gamma = 1')
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% sigmoid
disp('sigmoid gamma = 1')
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -v 10 -q');
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

%%
disp(' ')
disp(' ')

disp('p_training 50')
disp('validation 3')
% linear
disp('linear')
model =  svmtrain(y_training,x_training,'-t 0 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 0 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% pilynomial
disp('polynomial =3')
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 3 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =4')
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 4 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =5')
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 5 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

disp('polynomial =6')
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 1 -d 6 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% radial basis f
disp('rbf gamma = 1')
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 2 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);

% sigmoid
disp('sigmoid gamma = 1')
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -v 3 -q');
model =  svmtrain(y_training,x_training,'-t 3 -g 1 -q');
[predicted_label] = svmpredict(y_testing, x_testing, model);
